<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:file="http://www.mulesoft.org/schema/mule/file"
      xmlns:ftp="http://www.mulesoft.org/schema/mule/ftp"
      xmlns:db="http://www.mulesoft.org/schema/mule/db"
	  xmlns:mule-xml="http://www.mulesoft.org/schema/mule/xml"
      xmlns:jersey="http://www.mulesoft.org/schema/mule/jersey"
      xmlns:json="http://www.mulesoft.org/schema/mule/json"
      xmlns:ws="http://www.mulesoft.org/schema/mule/ws"
      xmlns:jetty="http://www.mulesoft.org/schema/mule/jetty"
      xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
		http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
		http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
		http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
		http://www.mulesoft.org/schema/mule/ftp http://www.mulesoft.org/schema/mule/ftp/current/mule-ftp.xsd
		http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
		http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
		http://www.mulesoft.org/schema/mule/jersey http://www.mulesoft.org/schema/mule/jersey/current/mule-jersey.xsd
		http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
		http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
		http://www.mulesoft.org/schema/mule/jetty http://www.mulesoft.org/schema/mule/jetty/current/mule-jetty.xsd
	">

    <spring:beans>

        <spring:bean id="testString" class="java.lang.String">
            <spring:constructor-arg value="BIGTAP" />
        </spring:bean>

        <spring:bean id="messageTypes" class="java.util.ArrayList">
            <spring:constructor-arg>
                <spring:list>
                    <spring:value>CON</spring:value>
                    <spring:value>MISC</spring:value>
                    <spring:value>CCI</spring:value>
                </spring:list>
            </spring:constructor-arg>
        </spring:bean>
        <spring:bean id="dynamicJMSOutboundProcessor" class="com.cox.automotive.edi9.processor.DynamicJMSOutboundProcessor">
        </spring:bean>
    </spring:beans>
    <jms:activemq-connector name="jmsConnector1"
                            connectionFactory-ref="connectionFactory2"
                            specification="1.1"
                            validateConnections="true"
                            maxRedelivery="-1"
                            numberOfConsumers="4"/>

    <flow name="main">
        <vm:inbound-endpoint path="in"/>

        <!-- TODO add your service component here. This can also be a Spring bean using <spring-object bean="name"/> -->
        <append-string-transformer message=" Received from misc " />

        <logger message="This is a misc  vm flow #[payload]" level="INFO" doc:name="Logger"/>
        <vm:outbound-endpoint path="out"/>
    </flow>

    <flow name="requestResponseDemo">
        <vm:inbound-endpoint path="inRRMISC" exchange-pattern="request-response"/>

        <!-- TODO add your service component here. This can also be a Spring bean using <spring-object bean="name"/> -->
        <append-string-transformer message=" Received from MISC FLOW  " />

        <logger message="This is a misc requestResponseDemo flow #[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <!--
    <flow name="pollmsgFlow">
        <poll>
            <fixed-frequency-scheduler frequency="6000"/>
            <expression-component>
                <![CDATA[     payload = app.registry['testString'].toString();]]>
            </expression-component>
        </poll>
        <vm:outbound-endpoint path="in"/>

        <jms:outbound-endpoint queue="queue1" connector-ref="jmsConnector1" >
            <message-properties-transformer>
                <add-message-property key="X" value="CON"/>
            </message-properties-transformer>
        </jms:outbound-endpoint>
    </flow>

    <flow name="pollmsgFlow2">
        <poll>
            <fixed-frequency-scheduler frequency="6000"/>
            <expression-component>
                <![CDATA[     payload = app.registry['testString'].toString();]]>
            </expression-component>
        </poll>

        <jms:outbound-endpoint queue="queue1" connector-ref="jmsConnector1" >
            <message-properties-transformer>
                <add-message-property key="X" value="MISC"/>
            </message-properties-transformer>
        </jms:outbound-endpoint>
    </flow>
    -->
    <flow name="pollmsgFlow3">
        <poll>
            <fixed-frequency-scheduler frequency="6000"/>
            <expression-component>
                <![CDATA[     payload = app.registry['messageTypes'];]]>
            </expression-component>
        </poll>

        <component>
            <spring-object bean="dynamicJMSOutboundProcessor"/>
        </component>
    </flow>
    <flow name="jmsInboundFlow">
        <jms:inbound-endpoint queue="queue1" connector-ref="jmsConnector1" >
            <jms:selector expression="X='MISC'"/>
        </jms:inbound-endpoint>
        <logger message="This is a jms flow  misc-flow #[payload] #[message.inboundProperties.X]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="jmsInboundFlow2">
        <jms:inbound-endpoint queue="queue2" connector-ref="jmsConnector1" exchange-pattern="request-response">
            <jms:selector expression="X='MISC'"/>
        </jms:inbound-endpoint>
        <append-string-transformer message=" Received from MISC FLOW  " />
        <logger message="This is a jms flow  misc-flow #[payload] #[message.inboundProperties.X]" level="INFO" doc:name="Logger"/>
    </flow>
</mule>
